import React, {useState } from 'react';
import '../styles/header.css'
import { FaBars } from 'react-icons/fa';
import DropdownMenu from './DropdownMenu.jsx';
import '../styles/DropdownMenu.css'

export const Header = () => ({ onCreateDocument }) => {
    const [showDropdown, setShowDropdown] = useState(false);

    const toggleDropdown = () => {
        setShowDropdown(!showDropdown);
    };

    const handleCreateDocument = () => {
        setShowDropdown(false); // Close dropdown
        onCreateDocument(); // Trigger document creation
    };

    return (
        <header>
            <button onClick={toggleDropdown} className="menu-btn">
            <FaBars className={"fa-bars"} />
            </button>
            <h1>NexJot</h1>
            {showDropdown && (
            <div className="dropdown-content">
                <p onClick={handleCreateDocument}>Create New Document</p>
                <p>Settings</p>
                <p>Logout</p>
            </div>
            )}
        </header>
    );
};
import React, { useState } from 'react';
import '../styles/DropdownMenu.css'; 

/* This component is used to display a dropdown menu when the user clicks on the hamburger icon. */
const DropdownMenu = () => {
  const [showDropdown, setShowDropdown] = useState(false);

  const toggleDropdown = () => {
    setShowDropdown(!showDropdown);
  };

  /* The following code is used to render the dropdown menu. */
  return (
    <div className={`dropdown-container ${showDropdown ? 'show' : ''}`}>
      <button onClick={toggleDropdown} className="dropdown-button">
        {"\u2630"} {/* Unicode escape sequence for the hamburger icon */}
      </button>
      {showDropdown && (
        <div className="dropdown-content">
          <p>Create New Document</p>
          <p>Settings</p>
          <p>Logout</p>
        </div>
      )}
    </div>
  );
};

export default DropdownMenu;

/* src/styles/header.css */

/* Header styles */
header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem 2rem;
    background: linear-gradient(135deg, #4a90e2, #9013fe); /* Gradient background */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Box shadow */
    color: #ffffff;
    flex-wrap: nowrap; /* Prevent wrapping */
    position: sticky; /* Sticky header */
    top: 0; /* Sticky header */
    z-index: 1; /* Sticky header */
}

/* Dropdown menu styles */
.menu-btn {
  background: none;
  border: none;
  color: white;
  font-size: 24px;
  cursor: pointer;
}

/* Dropdown menu content styles */
.dropdown-content {
  position: absolute;
  top: 50px;
  right: 10px;
  background-color: white;
  color: black;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 1;
  padding: 10px;
}

/* Dropdown menu item styles */
.dropdown-content p {
  margin: 0;
  padding: 8px 16px;
  cursor: pointer;
}

/* Dropdown menu item hover styles */
.dropdown-content p:hover {
  background-color: #f1f1f1; /* Light gray background color */
}

/* Header content styles */
header h1 {
    font-size: 2rem;
    font-weight: bold;
    margin: 0;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
    white-space: nowrap;
}

header button {
    background: none;
    border: 2px solid #ffffff;
    border-radius: 5px;
    color: #ffffff;
    font-size: 1.5rem;
    cursor: pointer;
    padding: 0.5rem 1rem;
    transition: transform 0.2s, color 0.2s, background 0.2s;
}

header button:hover,
header button:focus {
    transform: scale(1.1);
    color: #4a90e2;
    background: #ffffff;
}

.fa-bars {
    margin-right: 0.5rem;
}

@media (max-width: 600px) {
    header {
        flex-direction: row;
        justify-content: space-between;
    }

    header h1 {
        font-size: 1.5rem;
    }

    header button {
        font-size: 1.2rem;
    }
}



/* add spin effect to the h1 tag in the header when hovered */
@media (prefers-reduced-motion: no-preference) {
    header h1:hover {
        animation: h1-spin infinite 20s linear;
    }
}
@keyframes h1-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Style the dropdown menu */
.dropdown-container {
  position: relative;
  display: inline-block;
}

/* Style the dropdown button */
.dropdown-button {
  background-color: #4CAF50;
  color: white;
  padding: 10px;
  font-size: 24px;
  border: none;
  cursor: pointer;
}

/* Style the dropdown content */
.dropdown-content {
  display: none;
  position: absolute;
  background-color: white;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  z-index: 1;
}

/* Show the dropdown content when the button is clicked */
.dropdown-container.show .dropdown-content {
  display: block;
}

/* Change the background color of the dropdown button when the dropdown content is shown */
.dropdown-content p {
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
  cursor: pointer;
}

/* Change the background color of the dropdown button on hover */
.dropdown-content p:hover {
  background-color: #f1f1f1; /* Light gray */
}

